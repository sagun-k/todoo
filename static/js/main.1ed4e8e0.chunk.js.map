{"version":3,"sources":["Components/DisplayItem.js","Components/DisplayList.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayItem","props","state","editing","changed","todo","userInput","event","this","setState","editingchanged","console","log","keyCode","_ChangedInput","target","value","viewStyle","editStyle","display","className","stytle","onDoubleClick","handleEditing","bind","type","checked","done","onChange","handleOnChange","id","href","onClick","handleRemove","xmlns","width","height","fill","fillRule","d","onKeyDown","handleEditingDone","handleEditingChange","style","Component","DisplayList","toDoList","map","i","rand","require","App","bodyBack","itemBack","itemBorder","textColor","dataTable","jun","Tara","dataText","handleChange","handleSubmit","json","localStorage","getItem","items","JSON","parse","prevProps","prevStates","stringify","setItem","text","preventDefault","item","concat","generate","idToBeMarked","_toDoList","filter","todos","idToBeDeleted","newToDo","newTodos","backgroundImage","backgroundRepeat","backgroundSize","handleToggle","onSubmit","placeholder","length","handleClearCompleted","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ed4e8e0.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class DisplayItem extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state={\r\n          editing:false,\r\n        changed:this.props.todo.userInput};\r\n  } \r\n  handleEditing(event){\r\n     \r\n  this.setState({ \r\n      editing:true\r\n    })\r\n  }\r\n  componentDidMount(){\r\n      this.setState({ editingchanged:this.props.todo.userInput})\r\n  }\r\n  handleEditingDone(event){\r\n      console.log(\"Editing is done\")\r\n      if(event.keyCode === 13){\r\n          this.setState({ editing:false})\r\n      }\r\n  }\r\n  handleEditingChange(event){\r\n      var _ChangedInput=event.target.value;\r\n      this.setState({ \r\n          changed:_ChangedInput,\r\n      })\r\n  }\r\n    render() {\r\n        var todo=this.props.todo;\r\n        var viewStyle={}\r\n        var editStyle={}\r\n       \r\n       if(this.state.editing){\r\n           viewStyle.display=\"none\";\r\n       }\r\n       else{\r\n           editStyle.display=\"none\"\r\n       }\r\n      \r\n        return (\r\n            <div className=\"w-full\" >\r\n                \r\n              <li className=\"h-12 shadow-md w-full \"  >\r\n                  <div stytle={viewStyle} onDoubleClick={this.handleEditing.bind(this)} className=\"grid grid-cols-6 mx-2 my-2  \" >\r\n                      <div className=\"col-start-1 col-end-2 mt-2 w-1/4 mx-auto   \" >\r\n            <input className=\" bg-black h-full w-full opacity-40\" type=\"checkbox\" checked={todo.done} onChange={this.props.handleOnChange.bind(null,todo.id)}    />\r\n            </div>\r\n            <h1 className=\"col-start-2 col-end-6 text-md mt-2 \" >\r\n            {this.state.changed}\r\n            </h1>\r\n            <a className=\"col-start-6 col-end-7 mt-3 \" href=\"#\" onClick={this.props.handleRemove.bind(null,todo.id)} ><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\"><path fill=\"#494C6B\" fillRule=\"evenodd\" d=\"M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z\"/>\r\n            </svg>\r\n\r\n            </a>\r\n            </div>\r\n            <input \r\n            type=\"text\"\r\n             value={this.state.changed}\r\n              onKeyDown={this.handleEditingDone.bind(this)} \r\n              onChange={this.handleEditingChange.bind(this)}\r\n              style={editStyle} />\r\n            </li>\r\n            \r\n            <hr className=\"bg-black \" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nDisplayItem.propTypes={\r\n    todo: PropTypes.object.isRequired,\r\n    handleOnChange:PropTypes.func.isRequired,\r\n    handleRemove: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default DisplayItem\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport DisplayItem from './DisplayItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class DisplayList extends Component {\r\n    \r\n   \r\n    render() {\r\n       \r\n        return (\r\n         \r\n            <ul>\r\n                 {this.props.toDoList.map((todo,i)=>{\r\n          return (  <DisplayItem\r\n            \r\n              key={todo.userInput} \r\n              todo={todo}\r\n               \r\n              handleRemove={this.props.handleRemove.bind(null,todo.id)} \r\n              handleOnChange={this.props.handleOnChange} />\r\n                 )})}\r\n           \r\n                </ul>\r\n                \r\n                \r\n        )\r\n    \r\n    \r\n}\r\n}\r\nDisplayList.propTypes={\r\n    toDoList: PropTypes.array.isRequired,\r\n    handleOnChange:PropTypes.func.isRequired,\r\n    handleRemove: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default DisplayList\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport DisplayList from './Components/DisplayList'\n\n\nimport React, { Component } from 'react'\nvar rand = require(\"random-key\");\nexport class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state={\n      userInput:\"\",\n      toDoList:[\n        \n        ],\n        bodyBack:\"white\",\n        itemBack:\"white\",\n        itemBorder:\"gray-100\",\n        textColor:\"gray-600\",\n        dataTable:\"white\",\n        jun:\"block\",\n        Tara:\"hidden\",\n        dataText:\"gray-500\"\n     \n      \n      \n    }\n    this.handleChange=this.handleChange.bind(this)\n    this.handleSubmit=this.handleSubmit.bind(this)\n  }\n  componentDidMount() {\n    const json = localStorage.getItem('todo-app-todoLits')\n    const items = JSON.parse(json)\n    this.setState({\n      toDoList:items\n    })\n  }\n  componentDidUpdate(prevProps, prevStates){\n    const json = JSON.stringify(this.state.toDoList)\n    localStorage.setItem('todo-app-todoLits', json)\n  }\n  \n  \n \n  handleChange(event) {\n    var text=event.target.value;\n   this.setState({\n     userInput:text,\n    \n   })\n\n\n  }\n \n  handleSubmit(event) {\n    event.preventDefault()\n    var userInput=this.state.userInput\n    if(this.state.userInput){\n    var item=this.state.toDoList.concat({userInput:userInput,\n                                           id:rand.generate(),\n                                           done:false});\n     this.setState({\n      userInput:\"\",\n      toDoList:item,\n                                            \n                                          })                                       \n    }\n   }\n    handleOnChange(idToBeMarked){\n      var _toDoList= this.state.toDoList\n      var todo= _toDoList.filter((todo)=>{\n        return todo.id===idToBeMarked\n        \n      })[0];\n      todo.done=!todo.done;\n      \n    console.log(\"Clicked\")\n      this.setState({\n        todos: _toDoList,\n      \n       \n      })\n    }\n  \n    handleRemove(idToBeDeleted){\n     var newToDo=this.state.toDoList.filter((todo)=>{\n       return todo.id!==idToBeDeleted\n     })\n     this.setState({\n       toDoList:newToDo,\n     })\n    }\n    handleClearCompleted(event) {\n      var newTodos= this.state.toDoList.filter((todo)=>{\n        return !todo.done\n      })\n      this.setState({\n        toDoList:newTodos,\n       \n      })\n    }\n    handleToggle(){\n      console.log(\"Toggle color\")\n      if(this.state.bodyBack === \"black\"){\n      this.setState({\n        bodyBack:\"white\",\n        itemBack:\"white\",\n        itemBorder:\"gray-100\",\n        textColor:\"gray-600\",\n        dataTable:\"white\",\n        jun:\"block\",\n        Tara:\"hidden\",\n      })}\n      else{\n        this.setState({\n          bodyBack:\"black\",\n          itemBack:\"listBack\",\n          itemBorder:\"gray-900\",\n          textColor:\"gray-400\",\n          dataTable:\"listBack\",\n          jun:\"hidden\",\n          Tara:\"block\",\n        })}\n      }\n      \n    \n  render() {\n    // this.styles={}\n    // if(this.state.linethrough === true){\n    //    this.styles.textDecoration=\"line-through\"\n    // }\n    const stylesLight={\n      backgroundImage:`url(./images/bg-desktop-light.jpg)`,\n      backgroundRepeat: 'no-repeat',\n       backgroundSize: 'cover',\n    }\n    const stylesDark={\n      backgroundImage:`url(./images/bg-desktop-dark.jpg)`,\n      backgroundRepeat: 'no-repeat',\n       backgroundSize: 'cover',\n    } \n    return (\n      <div className={`w-full bg-${this.state.bodyBack}`}   >\n        <div style={this.state.bodyBack === \"white\"? stylesLight :stylesDark} className=\" w-full inline-block  h-52 \" >\n          <div className=\"w-11/12 md:w-2/4   mx-auto flex justify-between  mt-10\" >\n        <h1 className=\"text-3xl text-white font-bold\" >\n          T\n          <span className=\"ml-3\" >O</span>\n          <span className=\"mx-3\" >D</span>\n          O\n        </h1>\n        <a href=\"#\" onClick={this.handleToggle.bind(this)} >\n          <div className={`relative ${this.state.jun}` } >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\"><path fill=\"#FFF\" fillRule=\"evenodd\" d=\"M13 0c.81 0 1.603.074 2.373.216C10.593 1.199 7 5.43 7 10.5 7 16.299 11.701 21 17.5 21c2.996 0 5.7-1.255 7.613-3.268C23.22 22.572 18.51 26 13 26 5.82 26 0 20.18 0 13S5.82 0 13 0z\"/></svg>\n          </div>\n          <div className={`relative bottom-1 ${this.state.Tara}`}  >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\"><path fill=\"#FFF\" fillRule=\"evenodd\" d=\"M13 21a1 1 0 011 1v3a1 1 0 11-2 0v-3a1 1 0 011-1zm-5.657-2.343a1 1 0 010 1.414l-2.121 2.121a1 1 0 01-1.414-1.414l2.12-2.121a1 1 0 011.415 0zm12.728 0l2.121 2.121a1 1 0 01-1.414 1.414l-2.121-2.12a1 1 0 011.414-1.415zM13 8a5 5 0 110 10 5 5 0 010-10zm12 4a1 1 0 110 2h-3a1 1 0 110-2h3zM4 12a1 1 0 110 2H1a1 1 0 110-2h3zm18.192-8.192a1 1 0 010 1.414l-2.12 2.121a1 1 0 01-1.415-1.414l2.121-2.121a1 1 0 011.414 0zm-16.97 0l2.121 2.12A1 1 0 015.93 7.344L3.808 5.222a1 1 0 011.414-1.414zM13 0a1 1 0 011 1v3a1 1 0 11-2 0V1a1 1 0 011-1z\"/></svg>\n          </div>\n\n        </a>\n        </div>\n        <div className=\"w-11/12 md:w-2/4   mx-auto mt-10 \">\n        <form onSubmit={this.handleSubmit} className=\"w-full\" >\n          <input type=\"text\" onChange={this.handleChange} value={this.state.userInput} className={`w-full h-14 rounded-lg bg-${this.state.itemBack} text-${this.state.textColor}  `} placeholder=\"Create new Todo\" />\n         \n        </form>\n        </div>\n        </div>\n        <div className={`w-11/12 overflow-y-auto mx-auto h-80 border-2 text-${this.state.textColor} border-${this.state.itemBorder} bg-${this.state.itemBack} rounded-md  relative bottom-6 shadow-2xl md:w-2/4`}   >\n      <DisplayList userInput={this.state.userInput}  toDoList={this.state.toDoList} handleRemove={this.handleRemove.bind(this)} handleOnChange={this.handleOnChange.bind(this)}   />\n      </div>\n         \n       <div className= {`w-11/12 border-2 border-${this.state.itemBorder} h-auto bg-${this.state.dataTable} text-${this.state.dataText}  shadow-xl md:w-2/4  mx-auto  `} >\n         <div className=\"flex justify-around  \" >\n         <p>\n          Total:{this.state.toDoList.length}\n        </p>\n        <p> \n         Completed:{this.state.toDoList.filter((todo)=>{return todo.done}).length}\n         </p>\n         <p>\n         Pending:{this.state.toDoList.filter((todo)=>{return !todo.done}).length}\n        \n        </p>\n        </div>\n        <div className={`text-center mt-2  text-${this.state.textColor} `} >\n        <a href=\"#\" onClick={this.handleClearCompleted.bind(this)} className=\" underline hover:text-blue-500 \" >Clear Completed</a>\n        </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}